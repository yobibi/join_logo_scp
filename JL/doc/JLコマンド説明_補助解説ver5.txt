-----------------------------------------
join_logo_scp用の実行内容スクリプト
補助解説 ver5.0対応
-----------------------------------------

■ver5.0について
 従来の推測構成補正はパラメータで修正必要なことも多かったが制御が難しく、
 細かい追加補正ができるようにする目的でJLスクリプトに多くの機能を追加。

 バグ的な動作修正以外は機能追加で対応しているので、ver4までのJLスクリプトは
 基本的にそのまま使えるはず。


■用語統一
決定する位置は以下を定義として、曖昧だった表記を統一
    基準ロゴ位置 : ロゴ区間の開始または終了位置
    基準位置     : 通常は基準ロゴ位置、-from等あれば変更後。検索元となる位置
    目的位置     : 基準位置からオプションに従って検索。実行に使用する位置
    終了位置     : ２点指定終了側で通常は基準位置。オプションで別位置も可能。


■新規検索機能の使用例

 推測構成をAutoIns/AutoDelで扱うための機能が多く追加されているが、具体例をいくつか記載

  Set pick 1,2,-1
  AutoDel -fromC -ZoneL -final -pick ${pick}
    →最終的な出力構成の先頭２つ、最後１つをカット
      -fromC    : すべての構成区切りを基準位置
      -ZoneL    : ロゴ区間内に限定
      -final    : 最終出力をロゴ区間とする
      -pick     : 条件を満たす位置の中で指定番目のみ実行
    ※内部的には基準位置に構成開始側(S)、目的位置は次の区切り(-DstNextC)が自動付加されている。

  AutoDel -fromSP -ZoneN
    →ロゴなし番組提供をカット
      -fromSP   : 番組提供の構成区切りを基準位置
      -ZoneN    : ロゴなし区間内に限定
    ※番組提供を最終出力ではなくロゴ状態でカット判断したいので、この場合-finalはダメ

  AutoIns -fromNL -Drange 31.0 -1 -underC
    →30秒を超えるNologoと表示される区間は残す
      -fromNL   : Nologoを基準位置（省略のSで開始側構成区切り）
      -Drange 31.0 -1 : 基準位置から31秒以上で上限なしが目的位置の範囲
      -underC   : 基準位置と目的位置の間に構成区切りがない（1構成が条件）

  GetList -fromCM -Dlist 15.0,30.0,45.0,60.0,75.0,90.0,105.0,120.0 -Dm 0.3 -underC -holdB
  AutoIns -fromCM -ZoneImmN ${LISTHOLD}
    →CM表示構成で15秒単位から0.3秒以上ずれている所は残す
      -fromCM   : CMの構成区切りを基準位置
      -Dlist    : 基準位置からリスト各内容の先を目的位置
      -Dm       : 目的位置での検索範囲マージン
      -underC   : 基準位置と目的位置の間に構成区切りがない（1構成が条件）
      -holdB    : 目的位置と終了位置（基準位置）の両方ともリスト変数(LISTHOLD)に出力
      -ZoneImmN : 指定リストを開始／終了交互のロゴ区間として区間外に限定
    ※ずれが0.3秒以内のCMをZone用区間として定義し、それ以外の区間に限定してAutoInsを適用

  AutoDel E -90.0 -fromC -underC -EndTail -Ftail 00:15:00 -keepC -pick 2
    →最後15分以内で2回目に現れる90秒構成以降は最後までカット
      E -90.0 -fromC : すべての構成区切り終了側を基準位置、基準位置の90秒手前を目的位置
      -underC   : 基準位置と目的位置の間に構成区切りがない（1構成で90秒が条件）
      -EndTail  : 最後を終了位置
      -Ftail 00:15:00 : 基準位置と目的位置を最後15分以内に範囲限定
      -keepC    : 区間内の構成区切りを保持したままAutoDelを実行
      -pick 2   : 条件を満たす2番目の位置のみで実行

  GetList B -Nlogo -preforce
  AutoDel -fromC -ZoneL -ZoneImmN ${LISTHOLD}
    →ロゴ認識している区間の中で実際のロゴが少しもかからない区間は削除
      B -Nlogo  : 実際のロゴ全部の開始と終了位置
      -preforce : 無音シーンチェンジがない時は中心位置（位置取得のみ）
    ※-Nlogoで実際のロゴ位置を取得するが、無音シーンチェンジない時あるので-preforceで必ず取得
      -Zoneと-ZoneImmは同時に使用可能。-ZoneImmが2つ以上必要な時はListJoin等で別途1つにまとめる
      ListJoinは-sort -overlap -mergeのオプションを追加したら今回のまとめ用途に使用可能

  GetList B -fromSP -fromNL -merge
  AutoDel S  15.0 -fromSP -overC -ZoneImmL ${LISTHOLD}
  AutoDel E -15.0 -fromSP -overC -ZoneImmL ${LISTHOLD}
    →番組提供と隣接Nologoを合わせると15秒になる時は結合してカット
      B -fromSP -fromNL : 番組提供とNologoの構成両側の位置取得
      -merge    : 隣接区間は同一領域とする（同一ロゴ区間とするため必須）
      S  15.0 -fromSP : 番組提供開始側を基準位置、15秒後を目的位置
      E -15.0 -fromSP : 番組提供終了側を基準位置、15秒前を目的位置
      -overC    : 基準位置と目的位置の間に構成区切り存在（2構成以上の結合が条件）
      -ZoneImmL : 指定リストを開始／終了交互のロゴ区間として区間内に限定
    ※番組提供とNologoをZone用区間として定義し、区間内に限定して適用することで実現
    ※-merge後の両端を取得するにはB指定（目的位置と終了位置を取得する-holdBではダメ）
    ※B指定はS/Eの2か所を独立に基準位置とするため、類似の-holdBとは動作が異なり使い分け注意

  AutoIns 130.0 -fromC -underC 3 -AC 90.0 -AC 120.0 -keepC
    →90秒、30秒、10秒と構成が続く時は残す
      130.0 -fromC  : すべての構成区切り開始側を基準位置、130秒後を目的位置
      -underC 3 : 基準位置と目的位置の間に構成区切りは2つまで
      -AC 90.0  : 基準位置から90秒後に構成区切りが存在
      -keepC    : 区間内の構成区切りを保持したままAutoInsを実行
    ※130秒区間内の区切りを2つ以内に限定し、90秒と120秒に存在の条件を付けることで区間を確定

  GetList 0 -fromC -RegOut lista
  GetList 90.0 -fromabs ${lista} -C -underC -RegOut lista
  GetList 30.0 -fromabs ${lista} -C -underC -RegOut lista
  GetList 10.0 -fromabs ${lista} -C -underC -RegOut lista
  Echo list:${lista:f}   # デバッグ用
  AutoIns -fromabs ${lista} -DstPrevC 3 -keepC
    →90秒、30秒、10秒と構成が続く時は残す
      0 -fromC  : 目的位置に基準位置（すべての構成区切り先頭）を指定
      -RegOut   : 指定変数名に出力
      -fromabs  : 指定リストの要素それぞれを基準位置
      -C        : 構成区切り位置に限定（-Cがない時はすべての無音シーンチェンジ位置が候補）
      ${lista:f} : 変数listaの時間をフレーム数に変換した値
      -DstPrevC 3 : 基準位置から3つ前の構成区切りを目的位置
    ※ver5追加の構成情報以外を基準位置にする時は、-C自動付加ないので構成区切り限定に-Cが必要
    ※条件が複雑になったり途中結果を見たい時はGetListで条件を少しずつ絞り込んで実行


■対象とする位置の指定オプションによる違い

(1) AutoDel S 10.0 -Nauto 1
    →10秒後付近の無音シーンチェンジ位置が対象

(2) AutoDel S 10.0 -Nauto 1 -force
    →10秒後付近の無音シーンチェンジ位置が対象、なければ強制的に10秒後を対象とする

(3) AutoDel S 10.0 -Nauto 1 -C
    →10秒後付近の構成区切り位置が対象

(4) AutoDel S 10.0 -Nauto 1 -fixpos
    →10秒後（位置固定）


■カットコマンドのオプションによる違い

(1)
  AutoDel S 15.0 -Nauto 1
  AutoDel S 10.0 -Nauto 1
  AutoDel S  5.0 -Nauto 1
    →先頭から15秒、10秒、5秒の順に無音シーンチェンジあればカット。削除したら先頭位置も変わるため最大30秒カット

(2)
  AutoDel S 15.0 -Nauto 1 -fix
  AutoDel S 10.0 -Nauto 1 -fix
  AutoDel S  5.0 -Nauto 1 -fix
    →(1)と動作は同じでカット属性も付加。(1)はロゴがなかったものとして扱うのに対し、
      (2)はカット位置であると明示する。カット属性を付けると番組提供等の自動付加対象外となる

(3)
  AutoDel S 15.0 -Nauto 1 -keepL
  AutoDel S 10.0 -Nauto 1 -keepL
  AutoDel S  5.0 -Nauto 1 -keepL
    →ロゴ位置は残したまま属性でカット。基準位置は変わらないので最大でも15秒カット

(4)
  AutoDel S -Dlist 15.0,10.0,5.0 -Nauto 1
    →先頭から15秒、10秒、5秒の順に検索するが、カットが行われた時点で終了。
      (1)-(3)同様にオプションで属性付加も可能。


■遅延実行の引数例

SetN a 10
SetN b 20
MemSet END -arg a {
  Echo $a,$b
};
SetN a $a+5
SetN b $b+5

（結果）10,25
  →MemSetの-argで指定した変数は、設定時点の値が{}内で使用される。
    MemSet ENDはコマンド終了箇所で自動実行される。-arg a,bとしたらbも設定時点の値を使用。
    変更のないグローバル変数、実行時点の値を使いたい変数は指定不要。保持されない変数使用時に必要。

Function fn( ref(s) t ){
  SetN s $s+1
  SetN t $t+1
  SetN fn $s+$t
  Echo P1:$s,$t,$fn
};
SetN a 10
SetN b 20
Fcall fn(a b) -RegOut c
Echo P2:$a,$b,$c

（結果）P1:11,21,32  P2:11,20,32
  →Functionは一般的な関数として使用できる。（結果）は途中改行あるが省略（以降も）


■遅延実行の実行順位例

MemSet END -order 70 {
  Echo 70-1
  Echo 70-2
};
MemSet END {
  Echo default-1
  Echo default-2
};
MemSet END -order 30 {
  Echo 30-1
  Echo 30-2
};

（結果）30-1  30-2  default-1  default-2  70-1  70-2
  →遅延実行するコマンド内で実行順位を変更する例。未指定時は50。
    記載順を無視して先／後に実行したいものがある場合に使用する。


■ローカル領域設定コマンド同一行記載の使用例

Set a 3
if $a<3 {
  Set b 2
}elsif $a==3 {
  Set b 3
}else{
  Set b 4
};
if    $a<3  { Set b 2 }
elsif $a==3 { Set b 3 }
else        { Set b 4 };

  →{}は同一行内で他コマンドと併記可能になり一行でまとめられる。
    前後引数と区別に空白必要であるが、先頭コマンド間の空白は省略可。
    "} EndIf"も"};"で表記可能になり、まとめられる。
    実行コマンドの大文字小文字は可読性を優先して自由。


■Repeat追加機能の使用例

Set lista 1,2,3,4,5,6,7,8
Repeat $#{lista}/2 -counter i 1 +2
  Break $lista[$i]>=5
  Echo $lista[$i+1]
EndRepeat

（結果）2 4
  →-counterで繰り返し回数連動のローカル変数を作成、Breakで実行中の条件による終了を実現。


■部分文字列の取得例

Set str "D:\temp\work\test.ts.txt"
  →この文字列に対する部分文字列例は下記の通り
${str:h}       → D:\temp\work
${str:H}       → D:\temp\work\
${str:t}       → test.ts.txt
${str:e}       → txt
${str:h:t}     → work
${str:t:r}     → test.ts
${str:t:r:r}   → test
${str:t:r:r:r} → test


Set str "D:\temp\test _データ１.txt"
{
  LocalSet EXTCHAR " _"
  Set str2 "${str:e:~0,3}"
}
Echo ${str2}
（結果）データ
  →拡張子以外の文字列で分割を使用した例。LocalSetで使用箇所のみに拡張子変更を限定。

